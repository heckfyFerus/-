# импортируем необходимые библиотеки
import random
import sys
import os

# функция выведет на экран список всех текстовых файлов из паки text_files
# в этих файлах хранятся данные для тренировки
def get_list_files():
    list_files=os.listdir('text_files') # получить список всех файлов
    print() # пустая строка
    print('Гена, вот тот самый список всех файлов который ты просил...... ')
    for i in list_files:
        print(i)

# функция принимает на вход полное имя файла, в котором хранятся данные для тренировки
# обрабатывает и подготавилвает данные
# возвращает вложенный спискок вида [[код][комментарий к коду]],[[код][комментарий к коду]], [[код][комментарий к коду]]и т.д. 
def get_data_file():
    name_file=input('введите полное имя файла: ')
    with open(rf'text_files\{name_file}','r',encoding='utf-8') as file: # получим данные
        data=[[k.strip() for k in i.split('#')] for i in file.read().splitlines()] # преобразуем полученные данные в список вида [[код][комментарий к коду]]...
        return data

# эта функция выводит в случайном порядке в одном и том же месте терминала (не сдвигая сроки вниз) 
# на первой строке комментарий, а на второй код из выбранного ранее текстового файлa
def training():
    input('''Вы находитесь в тренировочном режиме, нажимайте клавишу клавесина ENTER для построчного вывода команд,
если Вам надоест смотреть команды Вы всегда можете выдернуть шнур компьютера из розетки или написть - хватит''')
    print()
    while True:
        n=random.choice(data) # выберем случайную пару код-комментарий
        comment = n[1]
        code = n[0]
        sys.stdout.write(f"{comment}\n") # выведем на экран
        sys.stdout.write(f"{code}\n") # выведем на экран
        if input()=='хватит':
            break
        # вернем коретку на три строки назад, после чего выведем на экран две пустые строки
        # просто для того чтобы очистить экран, если этого не сделать последующие записи могут накладываться на предыдущие
        sys.stdout.write('\033[F' * 3)  # Возврат курсора на три строки назад
        sys.stdout.write(f" {len(comment)*' '}\n")  # выведем на экран пустую строку
        sys.stdout.write(f" {len(code)*' '}\n") # выведем на экран пустую строку
        sys.stdout.write('\033[F' * 2) # вернем каретку на две строки назад (обращайте внимание на символы новых строк \n)

# функция включает так называемый боевой режим, в котором первая строка комментарий (название команды),
# а вторая строка кода, который необходимо в точности повторить на клавиатуре
def battle():
    input('''Вы находитесь в боевом режиме, нажмите клавишу клавесина ENTER, берите в руки клавиатуру и гребите к берегу,
и пусть вам повезет в бесконечном цикле. Если все надоест напишите - хватит ''')
    print()
    while True:
        n=random.choice(data) # выберем случайную пару код-комментарий
        comment = n[1]
        code = n[0]
        sys.stdout.write(f"{comment}\n") # выведем на экран
        sys.stdout.write(f"{code}\r") # выведем на экран, обратите внимание в функции training похожий код, но здесь стоит возврат каретки в начало сроки, а не перенос строки
        i=input() # вводим текст
        sys.stdout.write('\033[F' * 2)  # Возврат курсора на две строки назад, обратите внимание input тоже делает перенос строки поэтому *2
        sys.stdout.write(f" {len(comment)*' '}\n")  # выведем на экран пустую строку очистив предыдущий текст
        sys.stdout.write(f" {len(code)*' '*2}\n") # выведем на экран пустую строку очистив предыдущий текст, *2 на всякий случай если выйдем за пределы текста, напишем лишнего, этот текст останется в окне терминала
        sys.stdout.write('\033[F' * 2) # вернем каретку на две строки назад 
        if i=='хватит':
            break
        if i!=code:
            # если ошибка, все тоже самое за исключением того что переменная n будет оставатся неизменной. Данные отправленные на экран, не будут меняться
            # n меняется циклом выше
            while True:
                comment = n[1]
                code = n[0]
                sys.stdout.write(f"{comment}\n")
                sys.stdout.write(f"{code}\r")
                i=input()
                sys.stdout.write('\033[F' * 2)  # Возврат курсора на две строки назад
                sys.stdout.write(f" {len(comment)*' '}\n")  
                sys.stdout.write(f" {len(code)*' '*2}\n")
                sys.stdout.write('\033[F' * 2)
                if i=='хватит':
                    break
                if i==code:
                    break

# функция включает режим терминатор, на экране появляется только одна строка комментарий, вторая строка пустая, в нее нужно написать правильный код.
def terminator():
    input('''Вы находитесь в режиме терминатор,  восстание машин уже близко, нажмите клавишу клавесина ENTER чтобы начать,
и пусть удача в бесконечном цикле всегда будет с Вами. Если все надоест напишите - хватит ''')
    print()
    while True:
        n=random.choice(data)
        comment = n[1]
        code = n[0]
        sys.stdout.write(f"{comment}\n")
        sys.stdout.write(f"\r") # похоже это единственное отличие от кода в предыдущей функции, вторая строка пустая, коретка в начале строки.
        i=input()
        sys.stdout.write('\033[F' * 2)  
        sys.stdout.write(f" {len(comment)*' '}\n")  
        sys.stdout.write(f" {len(code)*' '*2}\n")
        sys.stdout.write('\033[F' * 2)
        if i=='хватит':
            break
        if i!=code:
            while True:
                comment = n[1]
                code = n[0]
                sys.stdout.write(f"{comment}\n")
                sys.stdout.write(f"\r")
                i=input()
                sys.stdout.write('\033[F' * 2)  # Возврат курсора на две строки назад
                sys.stdout.write(f" {len(comment)*' '}\n")  
                sys.stdout.write(f" {len(code)*' '*2}\n")
                sys.stdout.write('\033[F' * 2)
                if i=='хватит':
                    break
                if i==code:
                    break

# создадим словарь с функциями и запустим программу
d={"training":training, "battle":battle, "terminator":terminator} # словарь функций
get_list_files()
data=get_data_file()
d[input('Выберите режим training, battle или terminator просто напишите одно слово: ')]()