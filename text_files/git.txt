git --version #посмотреть какая версия git установлена на компьютере
git init #инициализируем git
git status #проверим статус файлов
git add readme.md #добавить файл readme.md  в индекс
git commit -m "поехали" #создать коммит с текстовым сообщением - поехали
git log #посмотреть историю коммитов только для текущей ветки
git branch #посмотреть простой список имеющихся веток
git branch testing #создать новую ветку с именем testing
git checkout testing #переключится на ветку testing
git branch -d tss53 #удалить ветку tss53
git add file1 file2 #добавить два файла в индекс одной командой file1 и file2
git add . #добавить в индекс сразу все файлы
git diff #посмотреть что мы изменили но не проиндексировали (разница)
git diff --staged #посмотреть какие изменения войдут в следующий коммит, изменения которые мы проиндексировали (разница)
git diff master test #посмотреть разницу между содержанием коммитов ветки - master и ветки test (разница)
git branch --move master main #переименуем ветку master в main
git branch --merged #посмотреть ветки слитые с текущей (ветки не отмеченные * можно смело удалить командой git branch -d)
git branch --all #посмотреть на какой ветке мы сейчас находимся
git branch --no-merged #посмотреть ветки не слитые с текущей
git branch --no-merged master #посмотреть ветки не слитые c веткой master 
git branch -v #посмотрим последний коммит на каждой из веток
git checkout -b test4 #создать ветку test4 и сразу на нее переключиться
git checkout master #переключиться на ветку master
git commit -a -m "привет"  #создать коммит без добавления в индекс - привет
git merge hotfix #объединить ветку спереди стоящей веткой hotfix
git branch -d hotfix #удалим лишнею ветку hotfix
git checkout iss53 #теперь переключимся на ветку iss53
git commit -a -m "вот и лето пришло" #создадим коммит без добавления в индекс - вот и лето пришло
git checkout master #перейдем на ветку master
git merge iss53 #проведем слияние с веткой iss53
git branch -d iss53 #удалим лишнею ветку iss53
git config --global user.name "Frolenko Ruslan" #перед началом работы в глобальные настройки добавим имя пользователя - Frolenko Ruslan
git config --global user.email "heckfyFerus@gmail.com" #перед началом работы в глобальные настройки добавим адрес электронной почты "heckfyFerus@gmail.com"
git config --list #выведем список всех настроек
git config user.name #посмотреть в настройках имя 
git config user.email #посмотреть в настройках адрес электронной почты
git config --global init.defaultBranch main #изменение название главной ветки по умолчанию - main
git clone адрес сайта #клонируем каталог с сайта - адрес сайта
git show 12345 # посмотреть изменения в коммите 12345
git mv red  README #переименовать файл с red на README
q - #выйти
git log --all #посмотреть журнал коммитов по всем веткам
git status -s #сокращенный вывод статуса
git restore --staged CONTRIBUTING #Отменить индексацию файла - CONTRIBUTING
git restore CONTRIBUTING #отменить изменения файла любые локальные изменения исчезнут
clear #очистить терминал
git log -p #команда покажет разницу внесенную в каждый комит
git log -2 #команда выведет журнал коммитов только две записи 
git log --oneline #вывести на экран журнал коммитов в одну линию
cd work/ #перейти в папку work
git log --graph #вывести на экран журнал коммитов и ветвления
git branch iss53 #создать ветку iss53
git checkout iss53 #перейти на ветку iss53
git checkout -- CONTRIBUTING.md #отменить изменения в файле, вернутся к предыдущему коммиту, удалит все изменения, Внимательность!!! CONTRIBUTUNG.md
git add -h #посмотреть краткую инструкцию по команде add
git commit --amend #внести изменения в последний коммит
git rm FILE #удаляет конкретный файл (FILE) из рабочей директории
git rm --cached FILE #убирает конкретный файл (FILE) из контроля версий, но физически оставляет его на своём месте
git remote show origin #посмотреть информацию об удаленном репозитории (origin)
git remote rename pb paul #переименовать удаленный репозиторий pb в paul 
git remote add pb htpp #добавим удаленный репозиторий (htpp) и присвоим ему имя pb
git remote -v #посмотреть удаленные репозитории
git reset 12345 #отменить все коммиты после 12345, оставить все изменения в рабочей директории.
git reset --hard 12345 #сбросить всю историю до указанного коммита вместе с рабочей директорией
git reset README #отменить индексацию файла, сохранить его содержимое
git push #загрузить все изменения локальной ветки в удаленный репозиторий
git pull #загрузить историю из удаленного репозитория и объединить ее с локальным fittch + merge
